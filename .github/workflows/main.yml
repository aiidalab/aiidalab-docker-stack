---
name: Docker Images

on:
    pull_request:
    push:
        branches:
            - main
        tags:
            - "v*"
    workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
    # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:

    build:
        uses: ./.github/workflows/build.yml
        with:
            runsOn: ubuntu-latest

    test-amd64:
        needs: build
        strategy:
            fail-fast: false
            matrix:
                # NOTE: amd64 full-stack image is tested during build step
                target: ["base", "lab", "base-with-services"]

        uses: ./.github/workflows/test.yml
        with:
            runsOn: ubuntu-latest
            images: ${{ needs.build.outputs.images }}
            target: ${{ matrix.target }}
            integration: false

    # To save self-hosted runner resources, we're only testing full-stack image
    test-arm64:
        if: false
        needs: build
        uses: ./.github/workflows/test.yml
        with:
            runsOn: ARM64
            images: ${{ needs.build.outputs.images }}
            target: "full-stack"
            integration: false

    test-integration:
        needs: build
        strategy:
            fail-fast: false
            matrix:
                runner: ["ubuntu-latest"] #, "ARM64"]
        uses: ./.github/workflows/test.yml
        with:
            runsOn: ${{ matrix.runner }}
            images: ${{ needs.build.outputs.images }}
            target: "full-stack"
            integration: true

    publish:
        # TODO: This needs to be more restricted
        if: github.repository == 'aiidalab/aiidalab-docker-stack'
        needs: [build, test-amd64] #, test-arm64]
        uses: ./.github/workflows/publish.yml
        with:
            runsOn: ubuntu-latest
            images: ${{ needs.build.outputs.images }}
        secrets: inherit
            # DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            # DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
