---
name: Build a new image, upload to ghcr.io and test it

env:
    OWNER: ${{ github.repository_owner }}
    REGISTRY: ghcr.io

on:
    workflow_call:
        inputs:
            image:
                description: Image name
                required: true
                type: string
            architecture:
                description: Image architecture, e.g. amd64, arm64
                required: true
                type: string
            runsOn:
                description: GitHub Actions Runner image
                required: true
                type: string

jobs:
    build-test-upload:
        runs-on: ${{ inputs.runsOn }}
        timeout-minutes: 20

        steps:
            - name: Checkout Repo ‚ö°Ô∏è
              uses: actions/checkout@v4

            - name: Create dev environment üì¶
              uses: ./.github/actions/create-dev-env
              with:
                  architecture: ${{ inputs.architecture }}

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # Self-hosted runners share a state (whole VM) between runs
            # Also, they might have running or stopped containers,
            # which are not cleaned up by `docker system prun`
            - name: Reset docker state
              if: ${{ inputs.platform != 'x86_64' }}
              run: |
                  docker kill $(docker ps --quiet) || true
                  docker rm $(docker ps --all --quiet) || true
                  docker system prune --all --force
              shell: bash

              #- name: Build image üõ†
              #run: doit build --target ${{ inputs.image }} --arch ${{ inputs.architecture }} --organization ${{ env.OWNER }}
              #env:
              #    # Full logs for CI build
              #    BUILDKIT_PROGRESS: plain
              #shell: bash
              #
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }}
                  tags: |
                      type=sha,enable=${{ github.ref_type != 'tag' }}
                      type=ref,event=pr

            - name: Build image
              id: build
              uses: docker/build-push-action@v3
              with:
                  tags: ${{ steps.meta.outputs.tags }}
                  arch: ${{ inputs.architectore }}
                  push: false

              # TODO: Run tests in a separate job
              #- name: Run tests ‚úÖ
              #run: VERSION=newly-build pytest -s tests/test-common.py tests/test-${{ inputs.image }}.py --variant ${{ inputs.image }}
              #shell: bash
