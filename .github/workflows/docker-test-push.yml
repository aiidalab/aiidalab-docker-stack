---
name: Download Docker image and its tags from GitHub artifacts, apply them and push the image to DockerHub

env:
    OWNER: ${{ github.repository_owner }}
    # OWNER: jusong

on:
    workflow_call:
        inputs:
            image:
                description: Image name
                required: true
                type: string
            architecture:
                description: Image architecture
                required: true
                type: string
            registry:
                description: Docker registry
                required: true
                type: string
        secrets:
            REGISTRY_USERNAME:
                required: true
            REGISTRY_TOKEN:
                required: true

jobs:
    tag-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repo ⚡️
              uses: actions/checkout@v3
            - name: Create dev environment 📦
              uses: ./.github/actions/create-dev-env
              with:
                  architecture: ${{ inputs.architecture }}
            - name: Load image to Docker 📥
              uses: ./.github/actions/load-image
              with:
                  image: ${{ inputs.image }}
                  architecture: ${{ inputs.architecture }}

            #- name: Run tests ✅
            #  run: pytest -s tests/test-common.py tests/test-${{ inputs.image }}.py --variant ${{ inputs.image }}
            #  shell: bash

            - name: Login to GitHub Container Registry 🔑
              uses: docker/login-action@v2
              with:
                  registry: ${{ inputs.registry }}
                  username: ${{ secrets.REGISTRY_USERNAME }}
                  password: ${{ secrets.REGISTRY_TOKEN }}

            - name: Docker meta 📝
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: |
                      name=${{ inputs.registry }}/${{ env.OWNER }}/${{ inputs.image }}
                  tags: |
                      type=edge,enable={{is_default_branch}}
                      type=sha
                      type=ref,event=pr
                      type=match,pattern=v(\d{4}\.\d{4}),group=1

            - name: Set tags for image and push 🏷️📤💾
              run: |
                  declare -a arr=(${{ steps.meta.outputs.tags }})
                  for tag in "${arr[@]}"; do
                      arch_tag=$(echo ${tag} | sed "s/:/:${{ inputs.architecture }}-/")
                      docker tag ${{ env.OWNER }}/${{ inputs.image }}:newly-build ${arch_tag}
                      docker push ${arch_tag}

                      # write tag to file
                      echo ${arch_tag} >> /tmp/${{ inputs.image }}-${{ inputs.architecture }}-tags.txt
                  done
              shell: bash

            - name: Upload tags file 📤
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ inputs.image }}-${{ inputs.architecture }}-tags
                  path: /tmp/${{ inputs.image }}-${{ inputs.architecture }}-tags.txt
