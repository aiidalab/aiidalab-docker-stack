---
name: Build images and upload them to ghcr.io

env:
    OWNER: ${{ github.repository_owner }}
    REGISTRY: ghcr.io
    BUILDKIT_PROGRESS: plain
    # https://github.com/docker/metadata-action?tab=readme-ov-file#environment-variables
    DOCKER_METADATA_PR_HEAD_SHA: true

on:
    workflow_call:
        inputs:
            runsOn:
                description: GitHub Actions Runner image
                required: true
                type: string
        outputs:
            images:
                description: Built images, identified with digests
                value: ${{ jobs.build.outputs.images }}

jobs:
    build:
        name: amd64 and arm64
        runs-on: ${{ inputs.runsOn }}
        timeout-minutes: 30

        outputs:
            images: ${{ steps.bake_metadata.outputs.images }}

        # Make sure we fail if any command in a piped command sequence fails
        defaults:
            run:
                shell: bash -e -o pipefail {0}

        steps:

            - name: Checkout Repo ⚡️
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry 🔑
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Generate tags for images on ghcr.io 🏷️
              id: tags_template
              uses: docker/metadata-action@v4
              with:
                  bake-target: __template__-meta
                  images: |
                      name=${{ env.REGISTRY }}/aiidalab/__template__
                  tags: |
                      type=sha
                      type=ref,event=pr
                      type=edge,branch=main

            - name: Generate docker-bake metadata file.
              env:
                  BAKE_TEMPLATE_FILE: ${{ steps.tags_template.outputs.bake-file }}
              run: |
                  .github/workflows/merge-bake-template-target.sh ${BAKE_TEMPLATE_FILE} \
                    | tee docker-bake-template-meta.json

            - name: Build amd64 images 🏗️
              id: build-amd64
              uses: docker/bake-action@v4
              with:
                  # Do not push the resulting images, just load them to Docker for testing
                  push: true
                  set: |
                      *.platform=linux/amd64
                  files: |
                      docker-bake.hcl
                      build.json
                      docker-bake-template-meta.json

            - name: Get amd64 images with digests
              id: bake_metadata_amd64
              env:
                  BAKE_METADATA: ${{ steps.build-amd64.outputs.metadata }}
              run: |
                  .github/workflows/extract-image-names.sh >> "${GITHUB_OUTPUT}"

            - name: Set Up Python 🐍
              if: ${{ inputs.runner != 'ARM64' }}
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'
                  cache: pip

            - name: Install dependencies 📦
              run: |
                  pip install -r requirements.txt
                  pip freeze

              # We run tests here to catch issues early, before running arm64 build which is slow
            - name: Run tests for full-stack image
              run: REGISTRY= pytest -m "not integration" --target full-stack
              env: ${{ fromJSON(steps.bake_metadata_amd64.outputs.images) }}


              # Here we build amr64 images (with help of QEMU) and upload both amd64 and arm64 to ghcr.io
            - name: Build images for ARM64 and upload to ghcr.io 🍎📤
              id: build-upload
              uses: docker/bake-action@v4
              with:
                  push: true
                  # Using provenance to disable default attestation so it will build only desired images:
                  # https://github.com/orgs/community/discussions/45969
                  provenance: false
                  # NOTE: linux/amd64 images will be taken from previous step
                  set: |
                      *.platform=linux/amd64,linux/arm64
                  files: |
                      docker-bake.hcl
                      build.json
                      docker-bake-template-meta.json

            - name: Set output variables
              id: bake_metadata
              env:
                  BAKE_METADATA: ${{ steps.build-upload.outputs.metadata }}
              run: |
                  .github/workflows/extract-image-names.sh >> "${GITHUB_OUTPUT}"
