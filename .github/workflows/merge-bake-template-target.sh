#!/bin/bash
set -euo pipefail

# For each target that is part of the "default" group, replace the term
# "__template__" in the provided template bake-file, and then merge all
# resulting bake-files into one.
#
# That means if the default group contains a target named "base", the script
# will replace all occurrences of the term "__template__" with "base" and then
# merge the result with those for all other targets part of the "default" group.
#
# The motivation is to be able to use a bake-file generated by the
# docker/meta-action (which can currently only handle a single bake-target) for
# all targets currently specified in the main bake-file ("docker-bake.hcl").
#
# Example output (trimmed):
# {
#  "target": {
#    "base-meta": {
#      "tags": [
#        "ghcr.io/aiidalab/base:pr-439",
#        "ghcr.io/aiidalab/base:sha-40bdfc9"
#      ],
#      "labels": {
#        "org.opencontainers.image.created": "2024-04-19T11:50:09.021Z",
#        "org.opencontainers.image.description": "Docker images with the basic software stack for AiiDAlab",
#        "org.opencontainers.image.licenses": "NOASSERTION",
#        "org.opencontainers.image.revision": "40bdfc9491e409c67320ca3566f85aaf3feb36ea",
#        "org.opencontainers.image.source": "https://github.com/aiidalab/aiidalab-docker-stack",
#        "org.opencontainers.image.title": "aiidalab-docker-stack",
#        "org.opencontainers.image.url": "https://github.com/aiidalab/aiidalab-docker-stack",
#        "org.opencontainers.image.version": "pr-439"
#      },
#      "args": {
#        "DOCKER_META_IMAGES": "ghcr.io/aiidalab/base",
#        "DOCKER_META_VERSION": "pr-439"
#      }
#    },
#    "base-with-services-meta": {
#      "tags": [
#        "ghcr.io/aiidalab/base-with-services:pr-439",
#        "ghcr.io/aiidalab/base-with-services:sha-40bdfc9"
#      ],
#      "labels": {},
#      "args": {
#        "DOCKER_META_IMAGES": "ghcr.io/aiidalab/base-with-services",
#        "DOCKER_META_VERSION": "pr-439"
#      }
#    },
#    "lab-meta": {
#      "tags": [
#        "ghcr.io/aiidalab/lab:pr-439",
#        "ghcr.io/aiidalab/lab:sha-40bdfc9"
#      ],
#      "labels": {},
#      "args": {
#        "DOCKER_META_IMAGES": "ghcr.io/aiidalab/lab",
#        "DOCKER_META_VERSION": "pr-439"
#      }
#    },
#    "full-stack-meta": {
#      "tags": [
#        "ghcr.io/aiidalab/full-stack:pr-439",
#        "ghcr.io/aiidalab/full-stack:sha-40bdfc9"
#      ],
#      "labels": {},
#      "args": {
#        "DOCKER_META_IMAGES": "ghcr.io/aiidalab/full-stack",
#        "DOCKER_META_VERSION": "pr-439"
#      }
#    }
#  }
#}

if [[ -z ${1-} ]];then
  echo "ERROR: Provide path to bake-file template as first parameter"
  exit 1
fi

input_file=$1
if [[ ! -f ${input_file} ]];then
  echo "ERROR: File $input_file does not exist!"
  exit 1
fi

# Flatten the json file into a single line
input=$(cat $input_file | jq -c)

# Determine the targets.
# TODO: This currently fails due to PYTHON_MINOR_VERSION computation,
# let's just hardcode for now
# TARGETS=$(docker buildx bake --print | jq -cr '.group.default.targets' | jq -r '.[]')
TARGETS="base base-with-services lab full-stack"

# Generate the meta JSON strings
meta=""
for target in $TARGETS; do
  meta="${meta} ${input//__template__/${target}}"
done

# Combine into merged bake file.
echo $meta | jq -s 'reduce .[] as $x ({}; . * $x)'
